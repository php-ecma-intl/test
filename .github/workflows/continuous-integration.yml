# GitHub Actions Documentation: https://docs.github.com/en/actions

name: "Continuous Integration"

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  coding-standards:
    name: "Coding standards"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4.1.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.29.0"
        with:
          php-version: "latest"
          coverage: "none"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@3.0.0"

      - name: "Check syntax (php-parallel-lint)"
        run: "composer dev:lint:syntax"

      - name: "Check coding standards (PHP_CodeSniffer)"
        run: "composer dev:lint:style"

  conformance-tests:
    name: "Conformance tests"
    needs: ["coding-standards"]
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.2"
        icu:
          - "70.1"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4.1.2"
        with:
          submodules: true

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.29.0"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "intl-${{ matrix.icu }}"
          ini-values: "extension=ecma_intl"
          coverage: "none"

      - name: "Build and install ecma_intl"
        run: |
          cd ./resources/ext/
          phpize
          ./configure --enable-ecma_intl
          make -j$(nproc)
          sudo make install
          php --ri ecma_intl

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@3.0.0"

      - name: "Run conformance tests (Pest)"
        shell: "bash"
        run: "composer dev:test:pest"
